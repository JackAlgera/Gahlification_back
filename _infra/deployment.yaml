apiVersion: apps/v1
kind: Deployment
metadata:
  name: gahlification-backend
  namespace: gahlification
  labels:
    app: gahlification-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gahlification-backend
  template:
    metadata:
      namespace: gahlification
      labels:
        app: gahlification-backend
    spec:
      serviceAccountName: gahlification-ksa
      containers:
        - name: gahlification-backend-api
          image: "gcr.io/jack-prod-344910/github.com/jackalgera/gahlification_backend:latest"
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: DATABASE_INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: database_instance
            - name: DATABASE_USER_NAME
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: database_user_name
            - name: DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: database_password
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: database_name
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - "/cloud_sql_proxy"

            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "-ip_address_types=PRIVATE"

            - "-instances=jack-prod-344910:europe-west4:prod-database=tcp:5432"
          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          # Resource configuration depends on an application's requirements. You
          # should adjust the following values based on what your application
          # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "2Gi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu: "1"
